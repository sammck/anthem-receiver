{
  "commands": {
    "IDQ?": {
      "command_name": "IDQ?",
      "name": "device_info",
      "description": "Query model and firmware version. returns IDQ followed by model, software version, region, software build date e.g. \"IDQAVM 60 US 0.9.5Jun 15 2020\"",
      "related_query_description": "",
      "fields": [
        {
          "field_type": "command_code",
          "value": "IDQ"
        },
        {
          "field_type": "query_placeholder",
          "description": ""
        },
        {
          "field_type": "string",
          "pattern_letter": "x",
          "description": "model, software version, region, software build date e.g. \"AVM 60 US 0.9.5Jun 15 2020\"",
          "min_length": 1,
          "max_length": 100,
          "value_map_name": "",
          "blank_pad": false,
          "null_pad": false,
          "rstrip": true,
          "null_rstrip": true,
          "user_type": "str"
        }
      ],
      "is_settable": false,
      "report": false
    },
    "IDM?": {
      "command_name": "IDM?",
      "name": "device_model",
      "description": "Query model. returns IDM followed by model e.g. \"IDMAVM 60\"",
      "related_query_description": "",
      "fields": [
        {
          "field_type": "command_code",
          "value": "IDM"
        },
        {
          "field_type": "query_placeholder",
          "description": ""
        },
        {
          "field_type": "string",
          "pattern_letter": "x",
          "description": "model e.g. \"AVM 60\"",
          "min_length": 3,
          "max_length": 100,
          "value_map_name": "",
          "blank_pad": false,
          "null_pad": false,
          "rstrip": true,
          "null_rstrip": true,
          "user_type": "str"
        }
      ],
      "is_settable": false,
      "report": false
    },
    "IDS?": {
      "command_name": "IDS?",
      "name": "device_firmware_version",
      "description": "Query software version. returns IDS followed by software version e.g. \"IDS0.9.5\"",
      "related_query_description": "",
      "fields": [
        {
          "field_type": "command_code",
          "value": "IDS"
        },
        {
          "field_type": "query_placeholder",
          "description": ""
        },
        {
          "field_type": "string",
          "pattern_letter": "x",
          "description": "Software version e.g. \"0.9.5\"",
          "min_length": 5,
          "max_length": 20,
          "value_map_name": "",
          "blank_pad": false,
          "null_pad": false,
          "rstrip": true,
          "null_rstrip": true,
          "user_type": "str"
        }
      ],
      "is_settable": false,
      "report": false
    },
    "IDR?": {
      "command_name": "IDR?",
      "name": "device_region",
      "description": "Query region. returns IDR followed by region e.g. \"IDRUS \"",
      "related_query_description": "",
      "fields": [
        {
          "field_type": "command_code",
          "value": "IDR"
        },
        {
          "field_type": "query_placeholder",
          "description": ""
        },
        {
          "field_type": "string",
          "pattern_letter": "x",
          "description": "Region, e.g. \"US \"",
          "min_length": 3,
          "max_length": 20,
          "value_map_name": "",
          "blank_pad": true,
          "null_pad": false,
          "rstrip": true,
          "null_rstrip": true,
          "user_type": "str"
        }
      ],
      "is_settable": false,
      "report": false
    },
    "IDB?": {
      "command_name": "IDB?",
      "name": "device_build_date",
      "description": "Query software build date. returns IDB followed by software build date e.g. \"IDBJun 15 2020\"",
      "related_query_description": "",
      "fields": [
        {
          "field_type": "command_code",
          "value": "IDB"
        },
        {
          "field_type": "query_placeholder",
          "description": ""
        },
        {
          "field_type": "string",
          "pattern_letter": "x",
          "description": "software build date e.g. \"Jun 15 2020\"",
          "min_length": 11,
          "max_length": 11,
          "value_map_name": "",
          "blank_pad": false,
          "null_pad": false,
          "rstrip": true,
          "null_rstrip": true,
          "user_type": "str"
        }
      ],
      "is_settable": false,
      "report": false
    },
    "IDH?": {
      "command_name": "IDH?",
      "name": "device_hardware_version",
      "description": "Query hardware version. returns IDH followed by hardware version e.g. \"IDH1\"",
      "related_query_description": "",
      "fields": [
        {
          "field_type": "command_code",
          "value": "IDH"
        },
        {
          "field_type": "query_placeholder",
          "description": ""
        },
        {
          "field_type": "integer",
          "pattern_letter": "x",
          "description": "hardware version e.g. 1",
          "require_sign": false,
          "min_length": 1,
          "max_length": 3,
          "min_value": 1,
          "max_value": 100,
          "value_map_name": "",
          "user_type": "int"
        }
      ],
      "is_settable": false,
      "report": false
    },
    "IDN?": {
      "command_name": "IDN?",
      "name": "device_mac_address",
      "description": "Query MCU MAC Address. returns IDN followed by the unit's unique address e.g. \"IDN7CB77B014FE5\"",
      "related_query_description": "",
      "fields": [
        {
          "field_type": "command_code",
          "value": "IDN"
        },
        {
          "field_type": "query_placeholder",
          "description": ""
        },
        {
          "field_type": "string",
          "pattern_letter": "x",
          "description": "Unit's unique MAC address without colons; e.g., \"7CB77B014FE5\"",
          "min_length": 12,
          "max_length": 12,
          "value_map_name": "",
          "blank_pad": false,
          "null_pad": false,
          "rstrip": true,
          "null_rstrip": true,
          "user_type": "str"
        }
      ],
      "is_settable": false,
      "report": false
    },
    "ECHx": {
      "command_name": "ECHx",
      "name": "report_enable",
      "description": "Tx status set. x=0 off, x=1 on (report running changes to any settings marked as Report)",
      "related_query_description": "ECH? returns ECHx",
      "fields": [
        {
          "field_type": "command_code",
          "value": "ECH"
        },
        {
          "field_type": "query_placeholder",
          "description": "ECH? returns ECHx"
        },
        {
          "field_type": "integer",
          "pattern_letter": "x",
          "description": "0=off, 1=on",
          "require_sign": false,
          "min_length": 1,
          "max_length": 1,
          "min_value": 0,
          "max_value": 1,
          "value_map_name": "bool_field_converter",
          "user_type": "bool"
        }
      ],
      "is_settable": true,
      "report": false
    },
    "FPBx": {
      "command_name": "FPBx",
      "name": "front_panel_brightness",
      "description": "Front panel brightness: 0=off, 1=low, 2=medium, 3=high, n=cycle to next",
      "related_query_description": "FPB? returns FPBx (x=0-3)",
      "fields": [
        {
          "field_type": "command_code",
          "value": "FPB"
        },
        {
          "field_type": "query_placeholder",
          "description": "FPB? returns FPBx (x=0-3)"
        },
        {
          "field_type": "string",
          "pattern_letter": "x",
          "description": "0=off, 1=low, 2=medium, 3=high, n=cycle to next",
          "min_length": 1,
          "max_length": 1,
          "value_map_name": "front_panel_brightness_field_converter",
          "blank_pad": true,
          "null_pad": false,
          "rstrip": true,
          "null_rstrip": true,
          "user_type": "FrontPanelBrightness"
        }
      ],
      "is_settable": true,
      "report": true
    },
    "SDVSxxy": {
      "command_name": "SDVSxxy",
      "name": "dolby_volume_enable",
      "description": "Set Dolby Volume off (y=0) or on (y=1) for the Input # xx (xx=00-ZZ where ZZ is the number of active input configurations, 00=the current input).",
      "related_query_description": "SDVSxx? returns SDVSxxy",
      "fields": [
        {
          "field_type": "command_code",
          "value": "SDVS"
        },
        {
          "field_type": "integer",
          "pattern_letter": "x",
          "description": "",
          "require_sign": false,
          "min_length": 2,
          "max_length": 2,
          "min_value": 0,
          "max_value": 99,
          "value_map_name": "",
          "user_type": "int"
        },
        {
          "field_type": "query_placeholder",
          "description": "SDVSxx? returns SDVSxxy"
        },
        {
          "field_type": "integer",
          "pattern_letter": "y",
          "description": "Dolby Volume off (y=0) or on (y=1)",
          "require_sign": false,
          "min_length": 1,
          "max_length": 1,
          "min_value": 0,
          "max_value": 1,
          "value_map_name": "bool_field_converter",
          "user_type": "bool"
        }
      ],
      "is_settable": true,
      "report": true
    },
    "SDVLxxy": {
      "command_name": "SDVLxxy",
      "name": "dolby_volume_level",
      "description": "Set Dolby Volume Leveler to y (0=off, 1-9) for the Input # xx (xx=00-ZZ where ZZ is the number of active input configurations, 00=the current input).",
      "related_query_description": "SDVLxx? returns SDVLxxy",
      "fields": [
        {
          "field_type": "command_code",
          "value": "SDVL"
        },
        {
          "field_type": "integer",
          "pattern_letter": "x",
          "description": "Input number (xx=00-ZZ where ZZ is the number of active input configurations, 00=the current input)",
          "require_sign": false,
          "min_length": 2,
          "max_length": 2,
          "min_value": 0,
          "max_value": 0,
          "value_map_name": "",
          "user_type": "int"
        },
        {
          "field_type": "query_placeholder",
          "description": "SDVLxx? returns SDVLxxy"
        },
        {
          "field_type": "integer",
          "pattern_letter": "y",
          "description": "Dolby volume level (0=off, 1-9)",
          "require_sign": false,
          "min_length": 1,
          "max_length": 1,
          "min_value": 0,
          "max_value": 9,
          "value_map_name": "",
          "user_type": "int"
        }
      ],
      "is_settable": true,
      "report": true
    },
    "SLIPxxyyy": {
      "command_name": "SLIPxxyyy",
      "name": "lip_sync_delay",
      "description": "Set Lip Sync to yyy (0-150) ms for the Input # xx (xx=00-ZZ where ZZ is the number of active input configurations, 00=the current input).  Step must be in increments of 5ms or error will result.",
      "related_query_description": "SLIPxx? returns SLIPxxyyy",
      "fields": [
        {
          "field_type": "command_code",
          "value": "SLIP"
        },
        {
          "field_type": "integer",
          "pattern_letter": "x",
          "description": "Input number (xx=00-ZZ where ZZ is the number of active input configurations, 00=the current input)",
          "require_sign": false,
          "min_length": 2,
          "max_length": 2,
          "min_value": 0,
          "max_value": 0,
          "value_map_name": "",
          "user_type": "int"
        },
        {
          "field_type": "query_placeholder",
          "description": "SLIPxx? returns SLIPxxyyy"
        },
        {
          "field_type": "integer",
          "pattern_letter": "y",
          "description": "Lip sync delay (0-150) ms; Must be in increments of 5ms",
          "require_sign": false,
          "min_length": 3,
          "max_length": 3,
          "min_value": 0,
          "max_value": 150,
          "value_map_name": "",
          "user_type": "int"
        }
      ],
      "is_settable": true,
      "report": true
    },
    "SIPx": {
      "command_name": "SIPx",
      "name": "standby_ip_control_enable",
      "description": "Set Standby IP Control to Disabled (x=0) or Enabled (x=1). This must be enabled for the power-on command to operate via IP. With serial control, the power-on command need not be sent twice (once for wake-up) when this setting is enabled. Note that sending SIP1 disables ECO mode.",
      "related_query_description": "SIP? returns SIPx",
      "fields": [
        {
          "field_type": "command_code",
          "value": "SIP"
        },
        {
          "field_type": "query_placeholder",
          "description": "SIP? returns SIPx"
        },
        {
          "field_type": "integer",
          "pattern_letter": "x",
          "description": "Standby IP Control Disabled (x=0) or Enabled (x=1)",
          "require_sign": false,
          "min_length": 1,
          "max_length": 1,
          "min_value": 0,
          "max_value": 1,
          "value_map_name": "bool_field_converter",
          "user_type": "bool"
        }
      ],
      "is_settable": true,
      "report": true
    },
    "SSPxxy": {
      "command_name": "SSPxxy",
      "name": "speaker_profile",
      "description": "Set Speaker Profile to # y for profile 1 (y=1), profile 2 (y=2), profile 3 (y=3) and profile 4 (y=4) for the Input # xx (xx=00-ZZ where ZZ is the number of active input configurations, 00= the current input).",
      "related_query_description": "SSPxx? returns SSPxxy",
      "fields": [
        {
          "field_type": "command_code",
          "value": "SSP"
        },
        {
          "field_type": "integer",
          "pattern_letter": "x",
          "description": "Input number (xx=00-ZZ where ZZ is the number of active input configurations, 00=the current input)",
          "require_sign": false,
          "min_length": 2,
          "max_length": 2,
          "min_value": 0,
          "max_value": 0,
          "value_map_name": "",
          "user_type": "int"
        },
        {
          "field_type": "query_placeholder",
          "description": "SSPxx? returns SSPxxy"
        },
        {
          "field_type": "integer",
          "pattern_letter": "y",
          "description": "Speaker profile number (1-4)",
          "require_sign": false,
          "min_length": 1,
          "max_length": 1,
          "min_value": 1,
          "max_value": 4,
          "value_map_name": "",
          "user_type": "int"
        }
      ],
      "is_settable": true,
      "report": true
    },
    "SPNy?": {
      "command_name": "SPNy?",
      "name": "speaker_profile_name",
      "description": "Query the Speaker Profile name of the specified profile # y for profile 1 (y=1), profile 2 (y=2), profile 3 (y=3) and profile 4 (y=4). SPNy? Returns SNPyzzzzzzzz where zzzzzzzz= Profile Name in ASCII as set in the setup menu",
      "related_query_description": "",
      "fields": [
        {
          "field_type": "command_code",
          "value": "SPN"
        },
        {
          "field_type": "integer",
          "pattern_letter": "y",
          "description": "Speaker profile number (1-4)",
          "require_sign": false,
          "min_length": 1,
          "max_length": 1,
          "min_value": 1,
          "max_value": 4,
          "value_map_name": "",
          "user_type": "int"
        },
        {
          "field_type": "query_placeholder",
          "description": ""
        },
        {
          "field_type": "string",
          "pattern_letter": "z",
          "description": "Speaker profile name",
          "min_length": 8,
          "max_length": 8,
          "value_map_name": "",
          "blank_pad": true,
          "null_pad": false,
          "rstrip": true,
          "null_rstrip": true,
          "user_type": "str"
        }
      ],
      "is_settable": false,
      "report": false
    },
    "ZxPOWy": {
      "command_name": "ZxPOWy",
      "name": "power",
      "description": "Power. x=zone: 0 (all), 1 (main), 2 (where applicable), 3 (where applicable).  y: 0=off, 1=on.  When unit is in ECO standby mode (see product manual), it may be necessary to send the power-on command twice. Ex:\"Z0POW1;Z0POW1;\". The first instance is the wake-up from low-power state. Note that Zx=Z0 applies only to power command.",
      "related_query_description": "ZxPOW? returns ZxPOWy. Z0POW? returns Z0POW?",
      "fields": [
        {
          "field_type": "zone_prefix",
          "min_value": 0,
          "max_value": 3
        },
        {
          "field_type": "command_code",
          "value": "POW"
        },
        {
          "field_type": "query_placeholder",
          "description": "ZxPOW? returns ZxPOWy. Z0POW? is nonsensical and returns Z0POW?"
        },
        {
          "field_type": "integer",
          "pattern_letter": "y",
          "description": "Power off (y=0) or on (y=1)",
          "require_sign": false,
          "min_length": 1,
          "max_length": 1,
          "min_value": 0,
          "max_value": 1,
          "value_map_name": "bool_field_converter",
          "user_type": "bool"
        }
      ],
      "is_settable": true,
      "report": true
    },
    "ICN?": {
      "command_name": "ICN?",
      "name": "num_input_configurations",
      "description": "Query number of active input configurations that the system supports. returns ICNyy e.g. \"ICN9\" for a system with 9 active inputs",
      "related_query_description": "",
      "fields": [
        {
          "field_type": "command_code",
          "value": "ICN"
        },
        {
          "field_type": "query_placeholder",
          "description": ""
        },
        {
          "field_type": "integer",
          "pattern_letter": "y",
          "description": "number of active input configurations that the system supports",
          "require_sign": false,
          "min_length": 1,
          "max_length": 2,
          "min_value": 1,
          "max_value": 20,
          "value_map_name": "bool_field_converter",
          "user_type": "bool"
        }
      ],
      "is_settable": false,
      "report": true
    },
    "ISNyy?": {
      "command_name": "ISNyy?",
      "name": "input_short_name",
      "description": "Query the short input name of the input yy=01-ZZ.. returns 'ISNyyzzzz' where 'zzzz'= Input name as set in the setup menu. Maximum length of the short input name is 8 ASCII characters.",
      "related_query_description": "",
      "fields": [
        {
          "field_type": "command_code",
          "value": "ISN"
        },
        {
          "field_type": "integer",
          "pattern_letter": "y",
          "description": "input # yy=01-ZZ, where ZZ is number of supported input configurations",
          "require_sign": false,
          "min_length": 2,
          "max_length": 2,
          "min_value": 1,
          "max_value": 20,
          "value_map_name": "",
          "user_type": "int"
        },
        {
          "field_type": "query_placeholder",
          "description": ""
        },
        {
          "field_type": "string",
          "pattern_letter": "z",
          "description": "Short input name",
          "min_length": 1,
          "max_length": 8,
          "value_map_name": "",
          "blank_pad": false,
          "null_pad": false,
          "rstrip": true,
          "null_rstrip": true,
          "user_type": "str"
        }
      ],
      "is_settable": false,
      "report": true
    },
    "ILNyy?": {
      "command_name": "ILNyy?",
      "name": "input_long_name",
      "description": "Query the long input name of the input yy=01-ZZ.. returns 'ILNyyzzzz' where 'zzzz'= Input name as set in the setup menu. Maximum length of the long input name is 16 ASCII characters (not applicable to MRX x10).",
      "related_query_description": "",
      "fields": [
        {
          "field_type": "command_code",
          "value": "ILN"
        },
        {
          "field_type": "integer",
          "pattern_letter": "y",
          "description": "input # yy=01-ZZ, where ZZ is number of supported input configurations",
          "require_sign": false,
          "min_length": 2,
          "max_length": 2,
          "min_value": 1,
          "max_value": 20,
          "value_map_name": "",
          "user_type": "int"
        },
        {
          "field_type": "query_placeholder",
          "description": ""
        },
        {
          "field_type": "string",
          "pattern_letter": "z",
          "description": "Long input name",
          "min_length": 1,
          "max_length": 16,
          "value_map_name": "",
          "blank_pad": false,
          "null_pad": false,
          "rstrip": true,
          "null_rstrip": true,
          "user_type": "str"
        }
      ],
      "is_settable": false,
      "report": true
    },
    "ZxINPyy": {
      "command_name": "ZxINPyy",
      "name": "input_select",
      "description": "Input Select: yy=01-ZZ. Where ZZ is the number of active input configurations for the specified zone. Eg: 'Z1INP9' would select the 9th input in the main zone. When selecting an input that has no input connector assigned to Z2 the MRX x10 will silently ignore the input select command.",
      "related_query_description": "ZxINP? returns ZxINPyy  e.g. \"Z1INP10\".",
      "fields": [
        {
          "field_type": "zone_prefix",
          "min_value": 1,
          "max_value": 2
        },
        {
          "field_type": "command_code",
          "value": "INP"
        },
        {
          "field_type": "query_placeholder",
          "description": "ZxINP? returns ZxINPyy  e.g. \"Z1INP10\"."
        },
        {
          "field_type": "integer",
          "pattern_letter": "y",
          "description": "Input selection 01-ZZ, where ZZ is the number of active input configurations",
          "require_sign": false,
          "min_length": 2,
          "max_length": 2,
          "min_value": 1,
          "max_value": 20,
          "value_map_name": "",
          "user_type": "int"
        }
      ],
      "is_settable": true,
      "report": true
    },
    "ZxVUPyy": {
      "command_name": "ZxVUPyy",
      "name": "volume_up",
      "description": "Volume up: y=dB step: 0 to 10, m=minimum according to model. Entry is rounded to nearest valid value",
      "related_query_description": "",
      "fields": [
        {
          "field_type": "zone_prefix",
          "min_value": 1,
          "max_value": 2
        },
        {
          "field_type": "command_code",
          "value": "VUP"
        },
        {
          "field_type": "integer",
          "pattern_letter": "y",
          "description": "Number of dB to increase volume by (0-10)",
          "require_sign": false,
          "min_length": 1,
          "max_length": 2,
          "min_value": 0,
          "max_value": 10,
          "value_map_name": "",
          "user_type": "int"
        }
      ],
      "is_settable": false,
      "report": false
    },
    "ZxVDNyy": {
      "command_name": "ZxVDNyy",
      "name": "volume_down",
      "description": "Volume down: y=dB step: 0 to 10, m=minimum according to model. Entry is rounded to nearest valid value.",
      "related_query_description": "",
      "fields": [
        {
          "field_type": "zone_prefix",
          "min_value": 1,
          "max_value": 2
        },
        {
          "field_type": "command_code",
          "value": "VDN"
        },
        {
          "field_type": "integer",
          "pattern_letter": "y",
          "description": "Number of dB to decrease volume by (0-10)",
          "require_sign": false,
          "min_length": 1,
          "max_length": 2,
          "min_value": 0,
          "max_value": 10,
          "value_map_name": "",
          "user_type": "int"
        }
      ],
      "is_settable": false,
      "report": false
    },
    "ZxVOLsyy": {
      "command_name": "ZxVOLsyy",
      "name": "volume_level",
      "description": "Volume setting: s=sign: +/-, yy=value.  Example: Z1VOL-35 represents main zone volume set to -35 dB.  Entry is rounded to nearest valid value.",
      "related_query_description": "ZxVOL? returns ZxVOLsyy",
      "fields": [
        {
          "field_type": "zone_prefix",
          "min_value": 1,
          "max_value": 2
        },
        {
          "field_type": "command_code",
          "value": "VOL"
        },
        {
          "field_type": "query_placeholder",
          "description": "ZxVOL? returns ZxVOLsyy"
        },
        {
          "field_type": "integer",
          "pattern_letter": "y",
          "description": "Volume level in db, -99 to +99",
          "require_sign": false,
          "min_length": 1,
          "max_length": 3,
          "min_value": -99,
          "max_value": 99,
          "value_map_name": "",
          "user_type": "int"
        }
      ],
      "is_settable": true,
      "report": true
    },
    "ZxMUTy": {
      "command_name": "ZxMUTy",
      "name": "mute",
      "description": "Mute: 0=unmute, 1=mute, t=toggle",
      "related_query_description": "ZxMUT? returns ZxMUTy (y=0-1)",
      "fields": [
        {
          "field_type": "zone_prefix",
          "min_value": 1,
          "max_value": 2
        },
        {
          "field_type": "command_code",
          "value": "MUT"
        },
        {
          "field_type": "query_placeholder",
          "description": "ZxMUT? returns ZxMUTy (y=0-1)"
        },
        {
          "field_type": "string",
          "pattern_letter": "y",
          "description": "0=unmute, 1=mute, t=toggle",
          "min_length": 1,
          "max_length": 1,
          "value_map_name": "on_off_toggle_field_converter",
          "blank_pad": false,
          "null_pad": false,
          "rstrip": true,
          "null_rstrip": true,
          "user_type": "OnOffToggle"
        }
      ],
      "is_settable": true,
      "report": true
    },
    "ZxARCy": {
      "command_name": "ZxARCy",
      "name": "arc_enable",
      "description": "Turn ARC (Anthem Room Correction) off (y=0) or on (y=1) for the specified zone (currently ARC is only available on the Main zone, x=1)",
      "related_query_description": "ZxARC? returns ZxARCy (y=0-1)",
      "fields": [
        {
          "field_type": "zone_prefix",
          "min_value": 1,
          "max_value": 1
        },
        {
          "field_type": "command_code",
          "value": "ARC"
        },
        {
          "field_type": "query_placeholder",
          "description": "ZxARC? returns ZxARCy (y=0-1)"
        },
        {
          "field_type": "integer",
          "pattern_letter": "y",
          "description": "ARC off (y=0) or on (y=1)",
          "require_sign": false,
          "min_length": 1,
          "max_length": 1,
          "min_value": 0,
          "max_value": 1,
          "value_map_name": "bool_field_converter",
          "user_type": "bool"
        }
      ],
      "is_settable": true,
      "report": true
    },
    "Z1BLTyyy": {
      "command_name": "Z1BLTyyy",
      "name": "balance_left",
      "description": "Balance all channels to left: y= %: 0 to 100, m=minimum according to model. Entry is rounded to nearest valid value.",
      "related_query_description": "",
      "fields": [
        {
          "field_type": "zone_prefix",
          "min_value": 1,
          "max_value": 1
        },
        {
          "field_type": "command_code",
          "value": "BLT"
        },
        {
          "field_type": "integer",
          "pattern_letter": "y",
          "description": "Percent to balance to left (0-100)",
          "require_sign": false,
          "min_length": 1,
          "max_length": 3,
          "min_value": 0,
          "max_value": 100,
          "value_map_name": "",
          "user_type": "int"
        }
      ],
      "is_settable": false,
      "report": false
    },
    "Z1BRTyyy": {
      "command_name": "Z1BRTyyy",
      "name": "balance_right",
      "description": "Balance all channels to right: y= %: 0 to 100, m=minimum according to model. Entry is rounded to nearest valid value.",
      "related_query_description": "",
      "fields": [
        {
          "field_type": "zone_prefix",
          "min_value": 1,
          "max_value": 1
        },
        {
          "field_type": "command_code",
          "value": "BRT"
        },
        {
          "field_type": "integer",
          "pattern_letter": "y",
          "description": "Percent to balance to right (0-100)",
          "require_sign": false,
          "min_length": 1,
          "max_length": 3,
          "min_value": 0,
          "max_value": 100,
          "value_map_name": "",
          "user_type": "int"
        }
      ],
      "is_settable": false,
      "report": false
    },
    "Z1BALyyy": {
      "command_name": "Z1BALyyy",
      "name": "balance",
      "description": "Balance setting: yyy=% 0 to 100. Example: Z1BAL100 represents balance completely to the right. Z1BAL0 represents balance completely to the left. Z1BAL50 is balance in the middle. Entry is rounded to nearest valid value.",
      "related_query_description": "Z1BAL? returns Z1BALyyy",
      "fields": [
        {
          "field_type": "zone_prefix",
          "min_value": 1,
          "max_value": 1
        },
        {
          "field_type": "command_code",
          "value": "BAL"
        },
        {
          "field_type": "query_placeholder",
          "description": "Z1BAL? returns Z1BALyyy"
        },
        {
          "field_type": "integer",
          "pattern_letter": "y",
          "description": "Balance setting (0-100). 0=left, 100=right, 50=middle",
          "require_sign": false,
          "min_length": 1,
          "max_length": 3,
          "min_value": 0,
          "max_value": 100,
          "value_map_name": "",
          "user_type": "int"
        }
      ],
      "is_settable": true,
      "report": true
    },
    "Z1LUPyzz": {
      "command_name": "Z1LUPyzz",
      "name": "channel_level_up",
      "description": "Level up: y=channels: 0=subs, 1=fronts, 2=center, 3=surrounds, 4=backs, 5=LFE, 6=Heights1, 7=Heights2.  z=dB step: 0 to 10, m=minimum according to model",
      "related_query_description": "",
      "fields": [
        {
          "field_type": "zone_prefix",
          "min_value": 1,
          "max_value": 1
        },
        {
          "field_type": "command_code",
          "value": "LUP"
        },
        {
          "field_type": "integer",
          "pattern_letter": "y",
          "description": "channels: 0=subs, 1=fronts, 2=center, 3=surrounds, 4=backs, 5=LFE, 6=Heights1, 7=Heights2",
          "require_sign": false,
          "min_length": 1,
          "max_length": 1,
          "min_value": 0,
          "max_value": 7,
          "value_map_name": "",
          "user_type": "int"
        },
        {
          "field_type": "integer",
          "pattern_letter": "z",
          "description": "upward dB step: 0 to 10",
          "require_sign": false,
          "min_length": 1,
          "max_length": 2,
          "min_value": 0,
          "max_value": 10,
          "value_map_name": "",
          "user_type": "int"
        }
      ],
      "is_settable": false,
      "report": false
    },
    "Z1LDNyzz": {
      "command_name": "Z1LDNyzz",
      "name": "channel_level_down",
      "description": "Level down: y=channels: 0=subs, 1=fronts, 2=center, 3=surrounds, 4=backs, 5=LFE, 6=Heights1, 7=Heights2. y=dB step: 0 to 10, m=minimum according to model",
      "related_query_description": "",
      "fields": [
        {
          "field_type": "zone_prefix",
          "min_value": 1,
          "max_value": 1
        },
        {
          "field_type": "command_code",
          "value": "LDN"
        },
        {
          "field_type": "integer",
          "pattern_letter": "y",
          "description": "channels: 0=subs, 1=fronts, 2=center, 3=surrounds, 4=backs, 5=LFE, 6=Heights1, 7=Heights2",
          "require_sign": false,
          "min_length": 1,
          "max_length": 1,
          "min_value": 0,
          "max_value": 7,
          "value_map_name": "",
          "user_type": "int"
        },
        {
          "field_type": "integer",
          "pattern_letter": "z",
          "description": "downward dB step: 0 to 10",
          "require_sign": false,
          "min_length": 1,
          "max_length": 2,
          "min_value": 0,
          "max_value": 10,
          "value_map_name": "",
          "user_type": "int"
        }
      ],
      "is_settable": false,
      "report": false
    },
    "Z1LEVyszz": {
      "command_name": "Z1LEVyszz",
      "name": "channel_level",
      "description": "Level setting: y=Channels: 0=subs, 1=fronts, 2=center, 3=surrounds, 4=backs, 5=LFE, 6=Heights1, 7=Heights2. s=sign: +/-, zz=value.  Example: Z1LEV1+01 represents fronts boosted by 1 dB.  Entry is rounded to nearest valid value. Subs, fronts, center, surrounds, backs have range -10 dB to +10 dB. LFE has range -10 dB to 0 dB.",
      "related_query_description": "Z1LEVy? returns Z1LEVyszz",
      "fields": [
        {
          "field_type": "zone_prefix",
          "min_value": 1,
          "max_value": 1
        },
        {
          "field_type": "command_code",
          "value": "LEV"
        },
        {
          "field_type": "integer",
          "pattern_letter": "y",
          "description": "channels: 0=subs, 1=fronts, 2=center, 3=surrounds, 4=backs, 5=LFE, 6=Heights1, 7=Heights2",
          "require_sign": false,
          "min_length": 1,
          "max_length": 1,
          "min_value": 0,
          "max_value": 7,
          "value_map_name": "",
          "user_type": "int"
        },
        {
          "field_type": "query_placeholder",
          "description": "Z1LEVy? returns Z1LEVyszz"
        },
        {
          "field_type": "integer",
          "pattern_letter": "z",
          "description": "Level setting value in dB",
          "require_sign": false,
          "min_length": 1,
          "max_length": 3,
          "min_value": -10,
          "max_value": 10,
          "value_map_name": "",
          "user_type": "int"
        }
      ],
      "is_settable": true,
      "report": true
    },
    "Z1TUPyzz": {
      "command_name": "Z1TUPyzz",
      "name": "tone_up",
      "description": "Tone up: y=0 bass, 1 treble, zz=dB step: 0 to 10, m=minimum according to model.",
      "related_query_description": "",
      "fields": [
        {
          "field_type": "zone_prefix",
          "min_value": 1,
          "max_value": 1
        },
        {
          "field_type": "command_code",
          "value": "TUP"
        },
        {
          "field_type": "integer",
          "pattern_letter": "y",
          "description": "0 bass, 1 treble",
          "require_sign": false,
          "min_length": 1,
          "max_length": 1,
          "min_value": 0,
          "max_value": 1,
          "value_map_name": "eq_band_field_converter",
          "user_type": "EqBand"
        },
        {
          "field_type": "integer",
          "pattern_letter": "z",
          "description": "upward dB step: 0 to 10",
          "require_sign": false,
          "min_length": 1,
          "max_length": 2,
          "min_value": 0,
          "max_value": 10,
          "value_map_name": "",
          "user_type": "int"
        }
      ],
      "is_settable": false,
      "report": false
    },
    "Z1TDNyzz": {
      "command_name": "Z1TDNyzz",
      "name": "tone_down",
      "description": "Tone down: y=0 bass, 1 treble, zz=dB step: 0 to 10, m=minimum according to model.",
      "related_query_description": "",
      "fields": [
        {
          "field_type": "zone_prefix",
          "min_value": 1,
          "max_value": 1
        },
        {
          "field_type": "command_code",
          "value": "TDN"
        },
        {
          "field_type": "integer",
          "pattern_letter": "y",
          "description": "0 bass, 1 treble",
          "require_sign": false,
          "min_length": 1,
          "max_length": 1,
          "min_value": 0,
          "max_value": 1,
          "value_map_name": "eq_band_field_converter",
          "user_type": "EqBand"
        },
        {
          "field_type": "integer",
          "pattern_letter": "z",
          "description": "downward dB step: 0 to 10",
          "require_sign": false,
          "min_length": 1,
          "max_length": 2,
          "min_value": 0,
          "max_value": 10,
          "value_map_name": "",
          "user_type": "int"
        }
      ],
      "is_settable": false,
      "report": false
    },
    "Z1TONyszz": {
      "command_name": "Z1TONyszz",
      "name": "tone",
      "description": "Tone setting: y=0 bass, 1 treble.  s=sign: +/-, zz=value.  Example: Z1TON0-01 represents a bass cut by 1 dB.",
      "related_query_description": "Z1TONy? returns Z1TONyszz",
      "fields": [
        {
          "field_type": "zone_prefix",
          "min_value": 1,
          "max_value": 1
        },
        {
          "field_type": "command_code",
          "value": "TON"
        },
        {
          "field_type": "integer",
          "pattern_letter": "y",
          "description": "0 bass, 1 treble",
          "require_sign": false,
          "min_length": 1,
          "max_length": 1,
          "min_value": 0,
          "max_value": 1,
          "value_map_name": "eq_band_field_converter",
          "user_type": "EqBand"
        },
        {
          "field_type": "query_placeholder",
          "description": "Z1TONy? returns Z1TONyszz"
        },
        {
          "field_type": "integer",
          "pattern_letter": "z",
          "description": "Tone adjustment value in dB",
          "require_sign": false,
          "min_length": 1,
          "max_length": 3,
          "min_value": -10,
          "max_value": 10,
          "value_map_name": "",
          "user_type": "int"
        }
      ],
      "is_settable": true,
      "report": true
    },
    "T1TUP": {
      "command_name": "T1TUP",
      "name": "tuner_tune_up",
      "description": "Tune up",
      "related_query_description": "",
      "fields": [
        {
          "field_type": "tuner_prefix",
          "min_value": 1,
          "max_value": 1
        },
        {
          "field_type": "command_code",
          "value": "TUP"
        }
      ],
      "is_settable": false,
      "report": false
    },
    "T1TDN": {
      "command_name": "T1TDN",
      "name": "tuner_tune_down",
      "description": "Tune down",
      "related_query_description": "",
      "fields": [
        {
          "field_type": "tuner_prefix",
          "min_value": 1,
          "max_value": 1
        },
        {
          "field_type": "command_code",
          "value": "TDN"
        }
      ],
      "is_settable": false,
      "report": false
    },
    "T1KUP": {
      "command_name": "T1KUP",
      "name": "tuner_seek_up",
      "description": "Seek up",
      "related_query_description": "",
      "fields": [
        {
          "field_type": "tuner_prefix",
          "min_value": 1,
          "max_value": 1
        },
        {
          "field_type": "command_code",
          "value": "KUP"
        }
      ],
      "is_settable": false,
      "report": false
    },
    "T1KDN": {
      "command_name": "T1KDN",
      "name": "tuner_seek_down",
      "description": "Seek down",
      "related_query_description": "",
      "fields": [
        {
          "field_type": "tuner_prefix",
          "min_value": 1,
          "max_value": 1
        },
        {
          "field_type": "command_code",
          "value": "KDN"
        }
      ],
      "is_settable": false,
      "report": false
    },
    "T1PUP": {
      "command_name": "T1PUP",
      "name": "tuner_preset_next",
      "description": "Select the next available preset",
      "related_query_description": "",
      "fields": [
        {
          "field_type": "tuner_prefix",
          "min_value": 1,
          "max_value": 1
        },
        {
          "field_type": "command_code",
          "value": "PUP"
        }
      ],
      "is_settable": false,
      "report": false
    },
    "T1PDN": {
      "command_name": "T1PDN",
      "name": "tuner_preset_previous",
      "description": "Select the previous available preset",
      "related_query_description": "",
      "fields": [
        {
          "field_type": "tuner_prefix",
          "min_value": 1,
          "max_value": 1
        },
        {
          "field_type": "command_code",
          "value": "PDN"
        }
      ],
      "is_settable": false,
      "report": false
    },
    "T1FMSxxx.xx": {
      "command_name": "T1FMSxxx.xx",
      "name": "tuner_frequency",
      "description": "Tuner FM setting: 87.50-108.00. Picks nearest valid frequency.",
      "related_query_description": "T1FMS? Returns T1FMSxxx.xx",
      "fields": [
        {
          "field_type": "tuner_prefix",
          "min_value": 1,
          "max_value": 1
        },
        {
          "field_type": "command_code",
          "value": "FMS"
        },
        {
          "field_type": "query_placeholder",
          "description": "T1FMS? Returns T1FMSxxx.xx"
        },
        {
          "field_type": "float",
          "pattern_letter": "x",
          "description": "",
          "require_sign": false,
          "min_length": 2,
          "max_length": 6,
          "min_value": 87.5,
          "max_value": 108.0,
          "digs_after_decimal": 2,
          "value_map_name": "",
          "user_type": "float"
        }
      ],
      "is_settable": true,
      "report": true
    },
    "ZxTBS?": {
      "command_name": "ZxTBS?",
      "name": "zone_tuner_status",
      "description": "Query tuner status. returns ZxTBSy where\nx=1 Main Zone\nx=2 Zone2\ny=0 Not on Tuner\ny=1 Tuner on FM",
      "related_query_description": "",
      "fields": [
        {
          "field_type": "zone_prefix",
          "min_value": 1,
          "max_value": 2
        },
        {
          "field_type": "command_code",
          "value": "TBS"
        },
        {
          "field_type": "query_placeholder",
          "description": ""
        },
        {
          "field_type": "integer",
          "pattern_letter": "y",
          "description": "y=0 Not on Tuner, y=1 Tuner on FM",
          "require_sign": false,
          "min_length": 1,
          "max_length": 1,
          "min_value": 0,
          "max_value": 1,
          "value_map_name": "tuner_status_field_converter",
          "user_type": "TunerStatus"
        }
      ],
      "is_settable": false,
      "report": false
    },
    "T1PSAxx": {
      "command_name": "T1PSAxx",
      "name": "tuner_preset_assignment",
      "description": "Assign the current station to preset xx (01-30)",
      "related_query_description": "T1PSA? returns T1PSAyy (yy=00-30). 00=current station not assigned to a preset",
      "fields": [
        {
          "field_type": "tuner_prefix",
          "min_value": 1,
          "max_value": 1
        },
        {
          "field_type": "command_code",
          "value": "PSA"
        },
        {
          "field_type": "query_placeholder",
          "description": "T1PSA? returns T1PSAyy (yy=00-30). 00=current station not assigned to a preset"
        },
        {
          "field_type": "integer",
          "pattern_letter": "x",
          "description": "Preset number (01-30)",
          "require_sign": false,
          "min_length": 1,
          "max_length": 2,
          "min_value": 1,
          "max_value": 30,
          "value_map_name": "",
          "user_type": "int"
        }
      ],
      "is_settable": true,
      "report": true
    },
    "T1PSLxx": {
      "command_name": "T1PSLxx",
      "name": "tuner_preset_select",
      "description": "Tuner preset xx select (xx=01-30)",
      "related_query_description": "",
      "fields": [
        {
          "field_type": "tuner_prefix",
          "min_value": 1,
          "max_value": 1
        },
        {
          "field_type": "command_code",
          "value": "PSL"
        },
        {
          "field_type": "integer",
          "pattern_letter": "x",
          "description": "Preset number (01-30)",
          "require_sign": false,
          "min_length": 1,
          "max_length": 2,
          "min_value": 1,
          "max_value": 30,
          "value_map_name": "",
          "user_type": "int"
        }
      ],
      "is_settable": false,
      "report": false
    },
    "T1PRMxx": {
      "command_name": "T1PRMxx",
      "name": "tuner_preset_remove",
      "description": "Remove the preset xx. xx=00-30. 00=current station is removed from all presets",
      "related_query_description": "",
      "fields": [
        {
          "field_type": "tuner_prefix",
          "min_value": 1,
          "max_value": 1
        },
        {
          "field_type": "command_code",
          "value": "PRM"
        },
        {
          "field_type": "integer",
          "pattern_letter": "x",
          "description": "Preset number (01-30)",
          "require_sign": false,
          "min_length": 1,
          "max_length": 2,
          "min_value": 1,
          "max_value": 30,
          "value_map_name": "",
          "user_type": "int"
        }
      ],
      "is_settable": false,
      "report": false
    },
    "ZxSIMyyyy": {
      "command_name": "ZxSIMyyyy",
      "name": "ir_command",
      "description": "Simulated IR Command values for ZxSIMyyyy (use 0 to fill in blanks Ex: Key 1 = 0001)",
      "related_query_description": "",
      "fields": [
        {
          "field_type": "zone_prefix",
          "min_value": 1,
          "max_value": 2
        },
        {
          "field_type": "command_code",
          "value": "SIM"
        },
        {
          "field_type": "integer",
          "pattern_letter": "y",
          "description": "IR code (0000-9999)",
          "require_sign": false,
          "min_length": 4,
          "max_length": 4,
          "min_value": 0,
          "max_value": 9999,
          "value_map_name": "ir_code_field_converter",
          "user_type": "IrCode"
        }
      ],
      "is_settable": false,
      "report": false
    },
    "Z1MSGxyyyy": {
      "command_name": "Z1MSGxyyyy",
      "name": "on_screen_message",
      "description": "Display custom on-screen status message for duration of display timeout: x=row 0-1, yyyy=message (number of characters and rows available depends on model)",
      "related_query_description": "",
      "fields": [
        {
          "field_type": "zone_prefix",
          "min_value": 1,
          "max_value": 1
        },
        {
          "field_type": "command_code",
          "value": "MSG"
        },
        {
          "field_type": "integer",
          "pattern_letter": "x",
          "description": "Row (0-1)",
          "require_sign": false,
          "min_length": 1,
          "max_length": 1,
          "min_value": 0,
          "max_value": 1,
          "value_map_name": "",
          "user_type": "int"
        },
        {
          "field_type": "string",
          "pattern_letter": "y",
          "description": "Message to display",
          "min_length": 1,
          "max_length": 64,
          "value_map_name": "",
          "blank_pad": false,
          "null_pad": false,
          "rstrip": true,
          "null_rstrip": true,
          "user_type": "str"
        }
      ],
      "is_settable": false,
      "report": false
    },
    "Z1SMDx": {
      "command_name": "Z1SMDx",
      "name": "setup_menu_display",
      "description": "Setup menu display: 0=close, 1=open, t=toggle",
      "related_query_description": "Z1SMD? returns Z1SMDx (x=0-1)",
      "fields": [
        {
          "field_type": "zone_prefix",
          "min_value": 1,
          "max_value": 1
        },
        {
          "field_type": "command_code",
          "value": "SMD"
        },
        {
          "field_type": "query_placeholder",
          "description": "Z1SMD? returns Z1SMDx (x=0-1)"
        },
        {
          "field_type": "string",
          "pattern_letter": "x",
          "description": "0=close menu, 1=open menu, t=toggle menu",
          "min_length": 1,
          "max_length": 1,
          "value_map_name": "on_off_toggle_field_converter",
          "blank_pad": false,
          "null_pad": false,
          "rstrip": true,
          "null_rstrip": true,
          "user_type": "OnOffToggle"
        }
      ],
      "is_settable": true,
      "report": true
    },
    "Z1VIR?": {
      "command_name": "Z1VIR?",
      "name": "video_input_resolution",
      "description": "Query video input resolution: 0=no input, 1=other, 2=1080p60, 3=1080p50, 4=1080p24, 5=1080i60, 6=1080i50, 7=720p60, 8=720p50, 9=576p50, 10=576i50, 11=480p60, 12=480i60, 13=3D, 14=4k. returns Z1VIRxx",
      "related_query_description": "",
      "fields": [
        {
          "field_type": "zone_prefix",
          "min_value": 1,
          "max_value": 1
        },
        {
          "field_type": "command_code",
          "value": "VIR"
        },
        {
          "field_type": "query_placeholder",
          "description": ""
        },
        {
          "field_type": "integer",
          "pattern_letter": "x",
          "description": "resolution: 0=no input, 1=other, 2=1080p60, 3=1080p50, 4=1080p24, 5=1080i60, 6=1080i50, 7=720p60, 8=720p50, 9=576p50, 10=576i50, 11=480p60, 12=480i60, 13=3D, 14=4k",
          "require_sign": false,
          "min_length": 1,
          "max_length": 2,
          "min_value": 0,
          "max_value": 14,
          "value_map_name": "video_resolution_field_converter",
          "user_type": "VideoResolution"
        }
      ],
      "is_settable": false,
      "report": true
    },
    "Z1IRH?": {
      "command_name": "Z1IRH?",
      "name": "horizontal_video_resolution",
      "description": "Query active horizontal video resolution (in pixels). return Z1IRHxxxx",
      "related_query_description": "",
      "fields": [
        {
          "field_type": "zone_prefix",
          "min_value": 1,
          "max_value": 1
        },
        {
          "field_type": "command_code",
          "value": "IRH"
        },
        {
          "field_type": "query_placeholder",
          "description": ""
        },
        {
          "field_type": "integer",
          "pattern_letter": "x",
          "description": "Horizontal resolution in pixels",
          "require_sign": false,
          "min_length": 1,
          "max_length": 4,
          "min_value": 0,
          "max_value": 9999,
          "value_map_name": "",
          "user_type": "int"
        }
      ],
      "is_settable": false,
      "report": true
    },
    "Z1IRV?": {
      "command_name": "Z1IRV?",
      "name": "vertical_video_resolution",
      "description": "Query active vertical video resolution (in pixels/lines). return Z1IRVxxxx",
      "related_query_description": "",
      "fields": [
        {
          "field_type": "zone_prefix",
          "min_value": 1,
          "max_value": 1
        },
        {
          "field_type": "command_code",
          "value": "IRV"
        },
        {
          "field_type": "query_placeholder",
          "description": ""
        },
        {
          "field_type": "integer",
          "pattern_letter": "x",
          "description": "Vertical resolution in pixels",
          "require_sign": false,
          "min_length": 1,
          "max_length": 4,
          "min_value": 0,
          "max_value": 9999,
          "value_map_name": "",
          "user_type": "int"
        }
      ],
      "is_settable": false,
      "report": true
    },
    "Z1AIC?": {
      "command_name": "Z1AIC?",
      "name": "audio_input_channels",
      "description": "Query audio input channels: 0=no input, 1=other, 2=mono (center channel only), 3=2-channel, 4=5.1-channel, 5=6.1-channel, 6=7.1-channel, 7=Atmos. returns Z1AICx",
      "related_query_description": "",
      "fields": [
        {
          "field_type": "zone_prefix",
          "min_value": 1,
          "max_value": 1
        },
        {
          "field_type": "command_code",
          "value": "AIC"
        },
        {
          "field_type": "query_placeholder",
          "description": ""
        },
        {
          "field_type": "integer",
          "pattern_letter": "x",
          "description": "0=no input, 1=other, 2=mono (center channel only), 3=2-channel, 4=5.1-channel, 5=6.1-channel, 6=7.1-channel, 7=Atmos",
          "require_sign": false,
          "min_length": 1,
          "max_length": 1,
          "min_value": 0,
          "max_value": 7,
          "value_map_name": "audio_channels_status_field_converter",
          "user_type": "AudioChannelsStatus"
        }
      ],
      "is_settable": false,
      "report": true
    },
    "Z1AIF?": {
      "command_name": "Z1AIF?",
      "name": "audio_input_format",
      "description": "Query audio input format: 0=no input, 1=Analog, 2=PCM, 3=Dolby, 4= DSD, 5=DTS, 6=Atmos. Not all models support all formats (ex: DSD).. Returns Z1AIFxx",
      "related_query_description": "",
      "fields": [
        {
          "field_type": "zone_prefix",
          "min_value": 1,
          "max_value": 1
        },
        {
          "field_type": "command_code",
          "value": "AIF"
        },
        {
          "field_type": "query_placeholder",
          "description": ""
        },
        {
          "field_type": "integer",
          "pattern_letter": "x",
          "description": "0=no input, 1=Analog, 2=PCM, 3=Dolby, 4= DSD, 5=DTS, 6=Atmos",
          "require_sign": false,
          "min_length": 1,
          "max_length": 1,
          "min_value": 0,
          "max_value": 6,
          "value_map_name": "audio_format_field_converter",
          "user_type": "AudioFormat"
        }
      ],
      "is_settable": false,
      "report": true
    },
    "Z1BRT?": {
      "command_name": "Z1BRT?",
      "name": "audio_input_bit_rate",
      "description": "Query audio input bit rate (kbps). For Analog/PCM inputs this is equal to the sample rate multiplied by the bit depth and the number of channels. returns Z1BRTxxxx, 0=analog",
      "related_query_description": "",
      "fields": [
        {
          "field_type": "zone_prefix",
          "min_value": 1,
          "max_value": 1
        },
        {
          "field_type": "command_code",
          "value": "BRT"
        },
        {
          "field_type": "query_placeholder",
          "description": ""
        },
        {
          "field_type": "integer",
          "pattern_letter": "x",
          "description": "Audio input bit rate (kbps).  0=analog",
          "require_sign": false,
          "min_length": 1,
          "max_length": 4,
          "min_value": 0,
          "max_value": 9999,
          "value_map_name": "",
          "user_type": "int"
        }
      ],
      "is_settable": false,
      "report": true
    },
    "Z1SRT?": {
      "command_name": "Z1SRT?",
      "name": "audio_input_sampling_rate",
      "description": "Query audio input sampling rate (kHz). returns Z1SRTxxx, 0=analog direct",
      "related_query_description": "",
      "fields": [
        {
          "field_type": "zone_prefix",
          "min_value": 1,
          "max_value": 1
        },
        {
          "field_type": "command_code",
          "value": "SRT"
        },
        {
          "field_type": "query_placeholder",
          "description": ""
        },
        {
          "field_type": "integer",
          "pattern_letter": "x",
          "description": "Audio input sampling rate (kHz).  0=analog direct",
          "require_sign": false,
          "min_length": 1,
          "max_length": 3,
          "min_value": 0,
          "max_value": 999,
          "value_map_name": "",
          "user_type": "int"
        }
      ],
      "is_settable": false,
      "report": true
    },
    "Z1AIN?": {
      "command_name": "Z1AIN?",
      "name": "audio_input_name",
      "description": "Query the current audio input name (maximum of 16 characters returned). Returns Z1AINx. Ex: Current audio input format is DTS Master Audio. 'Z1AIN?' Returns 'Z1AINDTS Master Audio'",
      "related_query_description": "",
      "fields": [
        {
          "field_type": "zone_prefix",
          "min_value": 1,
          "max_value": 1
        },
        {
          "field_type": "command_code",
          "value": "AIN"
        },
        {
          "field_type": "query_placeholder",
          "description": ""
        },
        {
          "field_type": "string",
          "pattern_letter": "x",
          "description": "Audio input name",
          "min_length": 1,
          "max_length": 16,
          "value_map_name": "",
          "blank_pad": false,
          "null_pad": false,
          "rstrip": true,
          "null_rstrip": true,
          "user_type": "str"
        }
      ],
      "is_settable": false,
      "report": true
    },
    "Z1AIR?": {
      "command_name": "Z1AIR?",
      "name": "audio_input_rate_name",
      "description": "Query the current audio input rate name (maximum of 16 characters returned).. Returns Z1AIRx. For lossy input formats, returns the bit rate (ex 'Z1AIR384 kbps'). For lossless audio, analog audio, or PCM audio inputs it returns the sample rate (ex: Z1AIR48 kHz).",
      "related_query_description": "",
      "fields": [
        {
          "field_type": "zone_prefix",
          "min_value": 1,
          "max_value": 1
        },
        {
          "field_type": "command_code",
          "value": "AIR"
        },
        {
          "field_type": "query_placeholder",
          "description": ""
        },
        {
          "field_type": "string",
          "pattern_letter": "x",
          "description": "Audio input rate name",
          "min_length": 1,
          "max_length": 16,
          "value_map_name": "",
          "blank_pad": false,
          "null_pad": false,
          "rstrip": true,
          "null_rstrip": true,
          "user_type": "str"
        }
      ],
      "is_settable": false,
      "report": true
    },
    "Z1ALMyy": {
      "command_name": "Z1ALMyy",
      "name": "audio_listening_mode",
      "description": "Audio Listening Mode: 00=None, 01=AnthemLogic-Movie, 02=AnthemLogic-Music, 03=PLIIx Movie, 04=PLIIx Music, 05=Neo:6 Cinema, 06=Neo:6 Music, 07=All Channel Stereo*, 08=All-Channel Mono*, 09=Mono*, 10=Mono-Academy*, 11=Mono(L)*, 12=Mono(R)*, 13=High Blend*, 14=Dolby Surround, 15=Neo:X-Cinema, 16=Neo:X-Music, na=cycle to next applicable, pa=cycle to previous applicable.  *Applicable to 2-channel source only. Some options are not available in all models or under all circumstances.",
      "related_query_description": "Z1ALM? returns Z1ALMyy",
      "fields": [
        {
          "field_type": "zone_prefix",
          "min_value": 1,
          "max_value": 1
        },
        {
          "field_type": "command_code",
          "value": "ALM"
        },
        {
          "field_type": "query_placeholder",
          "description": "Z1ALM? returns Z1ALMyy"
        },
        {
          "field_type": "string",
          "pattern_letter": "y",
          "description": "00=None, 01=AnthemLogic-Movie, 02=AnthemLogic-Music, 03=PLIIx Movie, 04=PLIIx Music, 05=Neo:6 Cinema, 06=Neo:6 Music, 07=All Channel Stereo*, 08=All-Channel Mono*, 09=Mono*, 10=Mono-Academy*, 11=Mono(L)*, 12=Mono(R)*, 13=High Blend*, 14=Dolby Surround, 15=Neo:X-Cinema, 16=Neo:X-Music, na=cycle to next applicable, pa=cycle to previous applicable",
          "min_length": 2,
          "max_length": 2,
          "value_map_name": "audio_listening_mode_field_converter",
          "blank_pad": false,
          "null_pad": false,
          "rstrip": true,
          "null_rstrip": true,
          "user_type": "AudioListeningMode"
        }
      ],
      "is_settable": true,
      "report": true
    },
    "Z1WCU": {
      "command_name": "Z1WCU",
      "name": "dolby_pliix_music_center_width_up",
      "description": "Dolby PLIIx Music center width up.  Applicable only when PLIIx Music is selected for 2-channel source.\nMRX 520 only",
      "related_query_description": "",
      "fields": [
        {
          "field_type": "zone_prefix",
          "min_value": 1,
          "max_value": 1
        },
        {
          "field_type": "command_code",
          "value": "WCU"
        }
      ],
      "is_settable": false,
      "report": false
    },
    "Z1WCD": {
      "command_name": "Z1WCD",
      "name": "dolby_pliix_music_center_width_up",
      "description": "Dolby PLIIx Music center width down.  Applicable only when PLIIx Music is selected for 2-channel source.\nMRX 520 only",
      "related_query_description": "",
      "fields": [
        {
          "field_type": "zone_prefix",
          "min_value": 1,
          "max_value": 1
        },
        {
          "field_type": "command_code",
          "value": "WCD"
        }
      ],
      "is_settable": false,
      "report": false
    },
    "Z1WSTy": {
      "command_name": "Z1WSTy",
      "name": "dolby_pliix_music_center_width",
      "description": "Dolby PLIIx Music center width setting: y=0-7.  Applicable only when PLIIx Music is selected for 2-channel source.\nMRX 520 only",
      "related_query_description": "Z1WST? returns Z1WSTy (y=0-7)",
      "fields": [
        {
          "field_type": "zone_prefix",
          "min_value": 1,
          "max_value": 1
        },
        {
          "field_type": "command_code",
          "value": "WST"
        },
        {
          "field_type": "query_placeholder",
          "description": "Z1WST? returns Z1WSTy (y=0-7)"
        },
        {
          "field_type": "integer",
          "pattern_letter": "y",
          "description": "Dolby PLIIx Music center width setting (0-7)",
          "require_sign": false,
          "min_length": 1,
          "max_length": 1,
          "min_value": 0,
          "max_value": 7,
          "value_map_name": "",
          "user_type": "int"
        }
      ],
      "is_settable": true,
      "report": true
    },
    "Z1DIU": {
      "command_name": "Z1DIU",
      "name": "dolby_pliix_music_dimension_up",
      "description": "Dolby PLIIx Music Dimension up.  Applicable only when PLIIx Music is selected for 2-channel source.\nMRX 520 only",
      "related_query_description": "",
      "fields": [
        {
          "field_type": "zone_prefix",
          "min_value": 1,
          "max_value": 1
        },
        {
          "field_type": "command_code",
          "value": "DIU"
        }
      ],
      "is_settable": false,
      "report": false
    },
    "Z1DID": {
      "command_name": "Z1DID",
      "name": "dolby_pliix_music_dimension_down",
      "description": "Dolby PLIIx Music Dimension down.  Applicable only when PLIIx Music is selected for 2-channel source.\nMRX 520 only",
      "related_query_description": "",
      "fields": [
        {
          "field_type": "zone_prefix",
          "min_value": 1,
          "max_value": 1
        },
        {
          "field_type": "command_code",
          "value": "DID"
        }
      ],
      "is_settable": false,
      "report": false
    },
    "Z1DSTy": {
      "command_name": "Z1DSTy",
      "name": "dolby_pliix_music_dimension",
      "description": "Dolby PLIIx Music Dimension setting: y=0-6.  Applicable only when PLIIx Music is selected for 2-channel source.\nMRX 520 only",
      "related_query_description": "Z1DST? returns Z1DSTy (y=0-6)",
      "fields": [
        {
          "field_type": "zone_prefix",
          "min_value": 1,
          "max_value": 1
        },
        {
          "field_type": "command_code",
          "value": "DST"
        },
        {
          "field_type": "query_placeholder",
          "description": "Z1DST? returns Z1DSTy (y=0-6)"
        },
        {
          "field_type": "integer",
          "pattern_letter": "y",
          "description": "Dolby PLIIx Music Dimension setting (0-6)",
          "require_sign": false,
          "min_length": 1,
          "max_length": 1,
          "min_value": 0,
          "max_value": 6,
          "value_map_name": "",
          "user_type": "int"
        }
      ],
      "is_settable": true,
      "report": true
    },
    "Z1PSTy": {
      "command_name": "Z1PSTy",
      "name": "dolby_pliix_music_panorama",
      "description": "Dolby PLIIx Music Panorama. y=0 off, y=1 on.  Applicable only when PLIIx Music is selected for 2-channel source.\nMRX 520 only",
      "related_query_description": "Z1PST? returns Z1PSTy (y=0-1)",
      "fields": [
        {
          "field_type": "zone_prefix",
          "min_value": 1,
          "max_value": 1
        },
        {
          "field_type": "command_code",
          "value": "PST"
        },
        {
          "field_type": "query_placeholder",
          "description": "Z1PST? returns Z1PSTy (y=0-1)"
        },
        {
          "field_type": "integer",
          "pattern_letter": "y",
          "description": "",
          "require_sign": false,
          "min_length": 1,
          "max_length": 1,
          "min_value": 0,
          "max_value": 1,
          "value_map_name": "bool_field_converter",
          "user_type": "bool"
        }
      ],
      "is_settable": true,
      "report": true
    },
    "Z1DYNy": {
      "command_name": "Z1DYNy",
      "name": "dolby_dynamic_range",
      "description": "Dolby Digital Dynamic Range (Dolby Digital 5.1 source): 0=Normal, 1=Reduced, 2=Late Night, n=cycle to next",
      "related_query_description": "Z1DYN? returns Z1DYNy (y=0-2)",
      "fields": [
        {
          "field_type": "zone_prefix",
          "min_value": 1,
          "max_value": 1
        },
        {
          "field_type": "command_code",
          "value": "DYN"
        },
        {
          "field_type": "query_placeholder",
          "description": "Z1DYN? returns Z1DYNy (y=0-2)"
        },
        {
          "field_type": "string",
          "pattern_letter": "y",
          "description": "0=Normal, 1=Reduced, 2=Late Night, n=cycle to next",
          "min_length": 1,
          "max_length": 1,
          "value_map_name": "dolby_dynamic_range_field_converter",
          "blank_pad": false,
          "null_pad": false,
          "rstrip": true,
          "null_rstrip": true,
          "user_type": "DolbyDynamicRange"
        }
      ],
      "is_settable": true,
      "report": true
    },
    "Z1DIA?": {
      "command_name": "Z1DIA?",
      "name": "dolby_digital_dialog_normalization",
      "description": "Query Dolby Digital dialog normalization. returns DIAx where x is dB of normalization, n=not applicable",
      "related_query_description": "",
      "fields": [
        {
          "field_type": "zone_prefix",
          "min_value": 1,
          "max_value": 1
        },
        {
          "field_type": "command_code",
          "value": "DIA"
        },
        {
          "field_type": "query_placeholder",
          "description": ""
        },
        {
          "field_type": "integer",
          "pattern_letter": "x",
          "description": "dB of normalization (0-99)",
          "require_sign": false,
          "min_length": 1,
          "max_length": 2,
          "min_value": 0,
          "max_value": 99,
          "value_map_name": "",
          "user_type": "int"
        }
      ],
      "is_settable": false,
      "report": true
    },
    "RxCTLy": {
      "command_name": "RxCTLy",
      "name": "trigger_control",
      "description": "Trigger control. x=trigger # 0=trigger 1, 1=trigger 2, y=0 menu control, y=1 RS-232/IP",
      "related_query_description": "RxCTL? Returns RxCTLy",
      "fields": [
        {
          "field_type": "trigger_prefix",
          "min_value": 0,
          "max_value": 1
        },
        {
          "field_type": "command_code",
          "value": "CTL"
        },
        {
          "field_type": "query_placeholder",
          "description": "RxCTL? Returns RxCTLy"
        },
        {
          "field_type": "integer",
          "pattern_letter": "y",
          "description": "y=0 menu control, y=1 RS-232/IP",
          "require_sign": false,
          "min_length": 1,
          "max_length": 1,
          "min_value": 0,
          "max_value": 0,
          "value_map_name": "trigger_control_source_field_converter",
          "user_type": "TriggerControlSource"
        }
      ],
      "is_settable": true,
      "report": false
    },
    "RxSETy": {
      "command_name": "RxSETy",
      "name": "trigger_setting",
      "description": "Trigger set: x: 0=trigger 1, 1=trigger 2.  y: 0=off, 1=on. Only available if trigger control has been set to RS-232/IP for the specified trigger",
      "related_query_description": "RxSET? returns RxSETy",
      "fields": [
        {
          "field_type": "trigger_prefix",
          "min_value": 0,
          "max_value": 1
        },
        {
          "field_type": "command_code",
          "value": "SET"
        },
        {
          "field_type": "query_placeholder",
          "description": "RxSET? returns RxSETy"
        },
        {
          "field_type": "integer",
          "pattern_letter": "y",
          "description": "trigger setting: 0=off, 1=on",
          "require_sign": false,
          "min_length": 1,
          "max_length": 1,
          "min_value": 0,
          "max_value": 0,
          "value_map_name": "bool_field_converter",
          "user_type": "bool"
        }
      ],
      "is_settable": true,
      "report": true
    }
  },
  "ir_sim_values": {
    "0000": {
      "code": 0,
      "name": "key_0",
      "description": "Key 0",
      "min_zone": 1,
      "max_zone": 2
    },
    "0001": {
      "code": 1,
      "name": "key_1",
      "description": "Key 1",
      "min_zone": 1,
      "max_zone": 2
    },
    "0002": {
      "code": 2,
      "name": "key_2",
      "description": "Key 2",
      "min_zone": 1,
      "max_zone": 2
    },
    "0003": {
      "code": 3,
      "name": "key_3",
      "description": "Key 3",
      "min_zone": 1,
      "max_zone": 2
    },
    "0004": {
      "code": 4,
      "name": "key_4",
      "description": "Key 4",
      "min_zone": 1,
      "max_zone": 2
    },
    "0005": {
      "code": 5,
      "name": "key_5",
      "description": "Key 5",
      "min_zone": 1,
      "max_zone": 2
    },
    "0006": {
      "code": 6,
      "name": "key_6",
      "description": "Key 6",
      "min_zone": 1,
      "max_zone": 2
    },
    "0007": {
      "code": 7,
      "name": "key_7",
      "description": "Key 7",
      "min_zone": 1,
      "max_zone": 2
    },
    "0008": {
      "code": 8,
      "name": "key_8",
      "description": "Key 8",
      "min_zone": 1,
      "max_zone": 2
    },
    "0009": {
      "code": 9,
      "name": "key_9",
      "description": "Key 9",
      "min_zone": 1,
      "max_zone": 2
    },
    "0010": {
      "code": 10,
      "name": "power_on",
      "description": "Power On",
      "min_zone": 1,
      "max_zone": 2
    },
    "0011": {
      "code": 11,
      "name": "power_off",
      "description": "Power Off",
      "min_zone": 1,
      "max_zone": 2
    },
    "0012": {
      "code": 12,
      "name": "setup",
      "description": "Setup",
      "min_zone": 1,
      "max_zone": 2
    },
    "0013": {
      "code": 13,
      "name": "input",
      "description": "Input",
      "min_zone": 1,
      "max_zone": 2
    },
    "0014": {
      "code": 14,
      "name": "mode",
      "description": "Mode",
      "min_zone": 1,
      "max_zone": 2
    },
    "0015": {
      "code": 15,
      "name": "dim",
      "description": "Dim",
      "min_zone": 1,
      "max_zone": 2
    },
    "0016": {
      "code": 16,
      "name": "level",
      "description": "Level",
      "min_zone": 1,
      "max_zone": 2
    },
    "0017": {
      "code": 17,
      "name": "info",
      "description": "Info",
      "min_zone": 1,
      "max_zone": 2
    },
    "0018": {
      "code": 18,
      "name": "up",
      "description": "Up",
      "min_zone": 1,
      "max_zone": 2
    },
    "0019": {
      "code": 19,
      "name": "down",
      "description": "Down",
      "min_zone": 1,
      "max_zone": 2
    },
    "0020": {
      "code": 20,
      "name": "left",
      "description": "Left",
      "min_zone": 1,
      "max_zone": 2
    },
    "0021": {
      "code": 21,
      "name": "right",
      "description": "Right",
      "min_zone": 1,
      "max_zone": 2
    },
    "0022": {
      "code": 22,
      "name": "select",
      "description": "Select",
      "min_zone": 1,
      "max_zone": 2
    },
    "0023": {
      "code": 23,
      "name": "page_up",
      "description": "Page Up",
      "min_zone": 1,
      "max_zone": 2
    },
    "0024": {
      "code": 24,
      "name": "page_down",
      "description": "Page Down",
      "min_zone": 1,
      "max_zone": 2
    },
    "0025": {
      "code": 25,
      "name": "volume_up",
      "description": "Volume Up",
      "min_zone": 1,
      "max_zone": 2
    },
    "0026": {
      "code": 26,
      "name": "volume_down",
      "description": "Volume Down",
      "min_zone": 1,
      "max_zone": 2
    },
    "0027": {
      "code": 27,
      "name": "mute_toggle",
      "description": "Mute Toggle",
      "min_zone": 1,
      "max_zone": 2
    },
    "0028": {
      "code": 28,
      "name": "last",
      "description": "Last",
      "min_zone": 1,
      "max_zone": 2
    },
    "0029": {
      "code": 29,
      "name": "tone",
      "description": "Tone",
      "min_zone": 1,
      "max_zone": 2
    },
    "0030": {
      "code": 30,
      "name": "bass",
      "description": "Bass",
      "min_zone": 1,
      "max_zone": 2
    },
    "0031": {
      "code": 31,
      "name": "treble",
      "description": "Treble",
      "min_zone": 1,
      "max_zone": 2
    },
    "0032": {
      "code": 32,
      "name": "lip_sync",
      "description": "Lip Sync",
      "min_zone": 1,
      "max_zone": 2
    },
    "0033": {
      "code": 33,
      "name": "balance",
      "description": "Balance",
      "min_zone": 1,
      "max_zone": 2
    },
    "0034": {
      "code": 34,
      "name": "dynamics",
      "description": "Dynamics",
      "min_zone": 1,
      "max_zone": 2
    },
    "0035": {
      "code": 35,
      "name": "clear",
      "description": "Clear",
      "min_zone": 1,
      "max_zone": 2
    },
    "0036": {
      "code": 36,
      "name": "preset",
      "description": "Preset",
      "min_zone": 1,
      "max_zone": 2
    }
  }
}